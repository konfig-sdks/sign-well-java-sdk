/*
 * Resources and endpoints
 * When I started SignWell in 2019, I saw there was a need for an alternative to the hard-to-use and expensive e-signature software already out there. Documents can be complicated enough, but getting a document signed shouldn't be complicated too.  At SignWell, we pride ourselves not only on the ease and affordability of our e-signature process but also on our personalized and industry-leading customer support â€” whether it's for individual use or larger team accounts, SignWell is here to help you feel comfortable and confident getting your documents signed.  The SignWell mission? Simplify how documents get signed for millions of people and businesses. We're excited to help you continue to move toward the future of paperless document signing.  Ruben Gamez Founder, SignWell
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BulkSendCreateValidationCsvResponse;
import com.konfigthis.client.model.BulkSendCsvRequest;
import com.konfigthis.client.model.BulkSendGetCsvTemplate200Response;
import com.konfigthis.client.model.BulkSendGetDocumentsResponse;
import com.konfigthis.client.model.BulkSendGetInformationResponse;
import com.konfigthis.client.model.BulkSendListBulkSendingsResponse;
import com.konfigthis.client.model.BulkSendValidateCsvResponse;
import com.konfigthis.client.model.CreateBulkSendRequest;
import java.io.File;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BulkSendApi
 */
@Disabled
public class BulkSendApiTest {

    private static BulkSendApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BulkSendApi(apiClient);
    }

    /**
     * Create Bulk Send
     *
     * Creates a bulk send, and it validates the CSV file before creating the bulk send.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createValidationCsvTest() throws ApiException {
        List<UUID> templateIds = null;
        byte[] bulkSendCsv = null;
        Boolean skipRowErrors = null;
        UUID apiApplicationId = null;
        String name = null;
        String subject = null;
        String message = null;
        Boolean applySigningOrder = null;
        String customRequesterName = null;
        String customRequesterEmail = null;
        BulkSendCreateValidationCsvResponse response = api.createValidationCsv(templateIds, bulkSendCsv)
                .skipRowErrors(skipRowErrors)
                .apiApplicationId(apiApplicationId)
                .name(name)
                .subject(subject)
                .message(message)
                .applySigningOrder(applySigningOrder)
                .customRequesterName(customRequesterName)
                .customRequesterEmail(customRequesterEmail)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Bulk Send CSV Template
     *
     * Fetches a CSV template that corresponds to the provided document template IDs. CSV templates are blank CSV files that have columns containing required and optional data that can be sent when creating a bulk send. Fields can be referenced by the field label. Example: [placeholder name]_[field label] could be something like customer_address or signer_company_name (if \&quot;Customer\&quot; and \&quot;Signer\&quot; were placeholder names for templates set up in SignWell).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCsvTemplateTest() throws ApiException {
        List<UUID> templateIds = null;
        byte[] base64 = null;
        BulkSendGetCsvTemplate200Response response = api.getCsvTemplate(templateIds)
                .base64(base64)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Bulk Send Documents
     *
     * Returns information about the Bulk Send.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentsTest() throws ApiException {
        UUID id = null;
        Integer limit = null;
        Integer page = null;
        BulkSendGetDocumentsResponse response = api.getDocuments(id)
                .limit(limit)
                .page(page)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Bulk Send
     *
     * Returns information about the Bulk Send.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInformationTest() throws ApiException {
        UUID id = null;
        BulkSendGetInformationResponse response = api.getInformation(id)
                .execute();
        // TODO: test validations
    }

    /**
     * List Bulk Sendings
     *
     * Returns information about the Bulk Send.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBulkSendingsTest() throws ApiException {
        String userEmail = null;
        Integer limit = null;
        Integer page = null;
        UUID apiApplicationId = null;
        BulkSendListBulkSendingsResponse response = api.listBulkSendings()
                .userEmail(userEmail)
                .limit(limit)
                .page(page)
                .apiApplicationId(apiApplicationId)
                .execute();
        // TODO: test validations
    }

    /**
     * Validate Bulk Send CSV
     *
     * Validates a Bulk Send CSV file before creating the Bulk Send. It will check the structure of the CSV and the data it contains, and return any errors found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void validateCsvTest() throws ApiException {
        List<UUID> templateIds = null;
        byte[] bulkSendCsv = null;
        BulkSendValidateCsvResponse response = api.validateCsv(templateIds, bulkSendCsv)
                .execute();
        // TODO: test validations
    }

}
