/*
 * Resources and endpoints
 * When I started SignWell in 2019, I saw there was a need for an alternative to the hard-to-use and expensive e-signature software already out there. Documents can be complicated enough, but getting a document signed shouldn't be complicated too.  At SignWell, we pride ourselves not only on the ease and affordability of our e-signature process but also on our personalized and industry-leading customer support â€” whether it's for individual use or larger team accounts, SignWell is here to help you feel comfortable and confident getting your documents signed.  The SignWell mission? Simplify how documents get signed for millions of people and businesses. We're excited to help you continue to move toward the future of paperless document signing.  Ruben Gamez Founder, SignWell
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * DocumentCreateFromTemplateResponseRecipientsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class DocumentCreateFromTemplateResponseRecipientsInner {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ATTACHMENT_REQUESTS = "attachment_requests";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_REQUESTS)
  private List<String> attachmentRequests = null;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PASSCODE = "passcode";
  @SerializedName(SERIALIZED_NAME_PASSCODE)
  private String passcode;

  public static final String SERIALIZED_NAME_SEND_EMAIL_DELAY = "send_email_delay";
  @SerializedName(SERIALIZED_NAME_SEND_EMAIL_DELAY)
  private Double sendEmailDelay;

  public static final String SERIALIZED_NAME_SIGNING_ORDER = "signing_order";
  @SerializedName(SERIALIZED_NAME_SIGNING_ORDER)
  private Double signingOrder;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_BOUNCED = "bounced";
  @SerializedName(SERIALIZED_NAME_BOUNCED)
  private String bounced;

  public static final String SERIALIZED_NAME_BOUNCED_DETAILS = "bounced_details";
  @SerializedName(SERIALIZED_NAME_BOUNCED_DETAILS)
  private String bouncedDetails;

  public static final String SERIALIZED_NAME_PLACEHOLDER_NAME = "placeholder_name";
  @SerializedName(SERIALIZED_NAME_PLACEHOLDER_NAME)
  private String placeholderName;

  public static final String SERIALIZED_NAME_SEND_EMAIL = "send_email";
  @SerializedName(SERIALIZED_NAME_SEND_EMAIL)
  private Boolean sendEmail;

  public static final String SERIALIZED_NAME_SIGNING_URL = "signing_url";
  @SerializedName(SERIALIZED_NAME_SIGNING_URL)
  private String signingUrl;

  public DocumentCreateFromTemplateResponseRecipientsInner() {
  }

  public DocumentCreateFromTemplateResponseRecipientsInner id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "document_sender", value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner attachmentRequests(List<String> attachmentRequests) {
    
    
    
    
    this.attachmentRequests = attachmentRequests;
    return this;
  }

  public DocumentCreateFromTemplateResponseRecipientsInner addAttachmentRequestsItem(String attachmentRequestsItem) {
    if (this.attachmentRequests == null) {
      this.attachmentRequests = new ArrayList<>();
    }
    this.attachmentRequests.add(attachmentRequestsItem);
    return this;
  }

   /**
   * Get attachmentRequests
   * @return attachmentRequests
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getAttachmentRequests() {
    return attachmentRequests;
  }


  public void setAttachmentRequests(List<String> attachmentRequests) {
    
    
    
    this.attachmentRequests = attachmentRequests;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "document_sender@domain.com", value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner message(String message) {
    
    
    
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    
    
    
    this.message = message;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Recipient 0", value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner passcode(String passcode) {
    
    
    
    
    this.passcode = passcode;
    return this;
  }

   /**
   * Get passcode
   * @return passcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123", value = "")

  public String getPasscode() {
    return passcode;
  }


  public void setPasscode(String passcode) {
    
    
    
    this.passcode = passcode;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner sendEmailDelay(Double sendEmailDelay) {
    
    
    
    
    this.sendEmailDelay = sendEmailDelay;
    return this;
  }

  public DocumentCreateFromTemplateResponseRecipientsInner sendEmailDelay(Integer sendEmailDelay) {
    
    
    
    
    this.sendEmailDelay = sendEmailDelay.doubleValue();
    return this;
  }

   /**
   * Get sendEmailDelay
   * @return sendEmailDelay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getSendEmailDelay() {
    return sendEmailDelay;
  }


  public void setSendEmailDelay(Double sendEmailDelay) {
    
    
    
    this.sendEmailDelay = sendEmailDelay;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner signingOrder(Double signingOrder) {
    
    
    
    
    this.signingOrder = signingOrder;
    return this;
  }

  public DocumentCreateFromTemplateResponseRecipientsInner signingOrder(Integer signingOrder) {
    
    
    
    
    this.signingOrder = signingOrder.doubleValue();
    return this;
  }

   /**
   * Get signingOrder
   * @return signingOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Double getSigningOrder() {
    return signingOrder;
  }


  public void setSigningOrder(Double signingOrder) {
    
    
    
    this.signingOrder = signingOrder;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "created", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner subject(String subject) {
    
    
    
    
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    
    
    
    this.subject = subject;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner bounced(String bounced) {
    
    
    
    
    this.bounced = bounced;
    return this;
  }

   /**
   * Get bounced
   * @return bounced
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBounced() {
    return bounced;
  }


  public void setBounced(String bounced) {
    
    
    
    this.bounced = bounced;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner bouncedDetails(String bouncedDetails) {
    
    
    
    
    this.bouncedDetails = bouncedDetails;
    return this;
  }

   /**
   * Get bouncedDetails
   * @return bouncedDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBouncedDetails() {
    return bouncedDetails;
  }


  public void setBouncedDetails(String bouncedDetails) {
    
    
    
    this.bouncedDetails = bouncedDetails;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner placeholderName(String placeholderName) {
    
    
    
    
    this.placeholderName = placeholderName;
    return this;
  }

   /**
   * Get placeholderName
   * @return placeholderName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Document Sender", value = "")

  public String getPlaceholderName() {
    return placeholderName;
  }


  public void setPlaceholderName(String placeholderName) {
    
    
    
    this.placeholderName = placeholderName;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner sendEmail(Boolean sendEmail) {
    
    
    
    
    this.sendEmail = sendEmail;
    return this;
  }

   /**
   * Get sendEmail
   * @return sendEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getSendEmail() {
    return sendEmail;
  }


  public void setSendEmail(Boolean sendEmail) {
    
    
    
    this.sendEmail = sendEmail;
  }


  public DocumentCreateFromTemplateResponseRecipientsInner signingUrl(String signingUrl) {
    
    
    
    
    this.signingUrl = signingUrl;
    return this;
  }

   /**
   * Get signingUrl
   * @return signingUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.signwell.com/d/b40050aa41/", value = "")

  public String getSigningUrl() {
    return signingUrl;
  }


  public void setSigningUrl(String signingUrl) {
    
    
    
    this.signingUrl = signingUrl;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the DocumentCreateFromTemplateResponseRecipientsInner instance itself
   */
  public DocumentCreateFromTemplateResponseRecipientsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentCreateFromTemplateResponseRecipientsInner documentCreateFromTemplateResponseRecipientsInner = (DocumentCreateFromTemplateResponseRecipientsInner) o;
    return Objects.equals(this.id, documentCreateFromTemplateResponseRecipientsInner.id) &&
        Objects.equals(this.attachmentRequests, documentCreateFromTemplateResponseRecipientsInner.attachmentRequests) &&
        Objects.equals(this.email, documentCreateFromTemplateResponseRecipientsInner.email) &&
        Objects.equals(this.message, documentCreateFromTemplateResponseRecipientsInner.message) &&
        Objects.equals(this.name, documentCreateFromTemplateResponseRecipientsInner.name) &&
        Objects.equals(this.passcode, documentCreateFromTemplateResponseRecipientsInner.passcode) &&
        Objects.equals(this.sendEmailDelay, documentCreateFromTemplateResponseRecipientsInner.sendEmailDelay) &&
        Objects.equals(this.signingOrder, documentCreateFromTemplateResponseRecipientsInner.signingOrder) &&
        Objects.equals(this.status, documentCreateFromTemplateResponseRecipientsInner.status) &&
        Objects.equals(this.subject, documentCreateFromTemplateResponseRecipientsInner.subject) &&
        Objects.equals(this.bounced, documentCreateFromTemplateResponseRecipientsInner.bounced) &&
        Objects.equals(this.bouncedDetails, documentCreateFromTemplateResponseRecipientsInner.bouncedDetails) &&
        Objects.equals(this.placeholderName, documentCreateFromTemplateResponseRecipientsInner.placeholderName) &&
        Objects.equals(this.sendEmail, documentCreateFromTemplateResponseRecipientsInner.sendEmail) &&
        Objects.equals(this.signingUrl, documentCreateFromTemplateResponseRecipientsInner.signingUrl)&&
        Objects.equals(this.additionalProperties, documentCreateFromTemplateResponseRecipientsInner.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, attachmentRequests, email, message, name, passcode, sendEmailDelay, signingOrder, status, subject, bounced, bouncedDetails, placeholderName, sendEmail, signingUrl, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentCreateFromTemplateResponseRecipientsInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    attachmentRequests: ").append(toIndentedString(attachmentRequests)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    passcode: ").append(toIndentedString(passcode)).append("\n");
    sb.append("    sendEmailDelay: ").append(toIndentedString(sendEmailDelay)).append("\n");
    sb.append("    signingOrder: ").append(toIndentedString(signingOrder)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    bounced: ").append(toIndentedString(bounced)).append("\n");
    sb.append("    bouncedDetails: ").append(toIndentedString(bouncedDetails)).append("\n");
    sb.append("    placeholderName: ").append(toIndentedString(placeholderName)).append("\n");
    sb.append("    sendEmail: ").append(toIndentedString(sendEmail)).append("\n");
    sb.append("    signingUrl: ").append(toIndentedString(signingUrl)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("attachment_requests");
    openapiFields.add("email");
    openapiFields.add("message");
    openapiFields.add("name");
    openapiFields.add("passcode");
    openapiFields.add("send_email_delay");
    openapiFields.add("signing_order");
    openapiFields.add("status");
    openapiFields.add("subject");
    openapiFields.add("bounced");
    openapiFields.add("bounced_details");
    openapiFields.add("placeholder_name");
    openapiFields.add("send_email");
    openapiFields.add("signing_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DocumentCreateFromTemplateResponseRecipientsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DocumentCreateFromTemplateResponseRecipientsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DocumentCreateFromTemplateResponseRecipientsInner is not found in the empty JSON string", DocumentCreateFromTemplateResponseRecipientsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("attachment_requests") != null && !jsonObj.get("attachment_requests").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `attachment_requests` to be an array in the JSON string but got `%s`", jsonObj.get("attachment_requests").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("message").isJsonNull() && (jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("passcode").isJsonNull() && (jsonObj.get("passcode") != null && !jsonObj.get("passcode").isJsonNull()) && !jsonObj.get("passcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `passcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("passcode").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (!jsonObj.get("subject").isJsonNull() && (jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
      if (!jsonObj.get("bounced").isJsonNull() && (jsonObj.get("bounced") != null && !jsonObj.get("bounced").isJsonNull()) && !jsonObj.get("bounced").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bounced` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bounced").toString()));
      }
      if (!jsonObj.get("bounced_details").isJsonNull() && (jsonObj.get("bounced_details") != null && !jsonObj.get("bounced_details").isJsonNull()) && !jsonObj.get("bounced_details").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bounced_details` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bounced_details").toString()));
      }
      if ((jsonObj.get("placeholder_name") != null && !jsonObj.get("placeholder_name").isJsonNull()) && !jsonObj.get("placeholder_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `placeholder_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("placeholder_name").toString()));
      }
      if ((jsonObj.get("signing_url") != null && !jsonObj.get("signing_url").isJsonNull()) && !jsonObj.get("signing_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signing_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signing_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DocumentCreateFromTemplateResponseRecipientsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DocumentCreateFromTemplateResponseRecipientsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DocumentCreateFromTemplateResponseRecipientsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DocumentCreateFromTemplateResponseRecipientsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<DocumentCreateFromTemplateResponseRecipientsInner>() {
           @Override
           public void write(JsonWriter out, DocumentCreateFromTemplateResponseRecipientsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public DocumentCreateFromTemplateResponseRecipientsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             DocumentCreateFromTemplateResponseRecipientsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DocumentCreateFromTemplateResponseRecipientsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DocumentCreateFromTemplateResponseRecipientsInner
  * @throws IOException if the JSON string is invalid with respect to DocumentCreateFromTemplateResponseRecipientsInner
  */
  public static DocumentCreateFromTemplateResponseRecipientsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DocumentCreateFromTemplateResponseRecipientsInner.class);
  }

 /**
  * Convert an instance of DocumentCreateFromTemplateResponseRecipientsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

