/*
 * Resources and endpoints
 * When I started SignWell in 2019, I saw there was a need for an alternative to the hard-to-use and expensive e-signature software already out there. Documents can be complicated enough, but getting a document signed shouldn't be complicated too.  At SignWell, we pride ourselves not only on the ease and affordability of our e-signature process but also on our personalized and industry-leading customer support â€” whether it's for individual use or larger team accounts, SignWell is here to help you feel comfortable and confident getting your documents signed.  The SignWell mission? Simplify how documents get signed for millions of people and businesses. We're excited to help you continue to move toward the future of paperless document signing.  Ruben Gamez Founder, SignWell
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.DocumentFromTemplateResponseFieldsInnerInnerRecipient;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * DocumentFromTemplateResponseFieldsInnerInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class DocumentFromTemplateResponseFieldsInnerInner {
  public static final String SERIALIZED_NAME_X = "x";
  @SerializedName(SERIALIZED_NAME_X)
  private Float x;

  public static final String SERIALIZED_NAME_Y = "y";
  @SerializedName(SERIALIZED_NAME_Y)
  private Float y;

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  private Integer page;

  public static final String SERIALIZED_NAME_RECIPIENT = "recipient";
  @SerializedName(SERIALIZED_NAME_RECIPIENT)
  private DocumentFromTemplateResponseFieldsInnerInnerRecipient recipient;

  public static final String SERIALIZED_NAME_API_ID = "api_id";
  @SerializedName(SERIALIZED_NAME_API_ID)
  private UUID apiId;

  public static final String SERIALIZED_NAME_DATE_FORMAT = "date_format";
  @SerializedName(SERIALIZED_NAME_DATE_FORMAT)
  private String dateFormat;

  public static final String SERIALIZED_NAME_FIXED_WIDTH = "fixed_width";
  @SerializedName(SERIALIZED_NAME_FIXED_WIDTH)
  private Boolean fixedWidth;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_LOCK_SIGN_DATE = "lock_sign_date";
  @SerializedName(SERIALIZED_NAME_LOCK_SIGN_DATE)
  private Boolean lockSignDate;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private Boolean required;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_VALIDATION = "validation";
  @SerializedName(SERIALIZED_NAME_VALIDATION)
  private String validation;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Object value = null;

  public DocumentFromTemplateResponseFieldsInnerInner() {
  }

  public DocumentFromTemplateResponseFieldsInnerInner x(Float x) {
    
    
    
    
    this.x = x;
    return this;
  }

   /**
   * Get x
   * @return x
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Float getX() {
    return x;
  }


  public void setX(Float x) {
    
    
    
    this.x = x;
  }


  public DocumentFromTemplateResponseFieldsInnerInner y(Float y) {
    
    
    
    
    this.y = y;
    return this;
  }

   /**
   * Get y
   * @return y
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Float getY() {
    return y;
  }


  public void setY(Float y) {
    
    
    
    this.y = y;
  }


  public DocumentFromTemplateResponseFieldsInnerInner page(Integer page) {
    
    
    
    
    this.page = page;
    return this;
  }

   /**
   * Get page
   * @return page
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getPage() {
    return page;
  }


  public void setPage(Integer page) {
    
    
    
    this.page = page;
  }


  public DocumentFromTemplateResponseFieldsInnerInner recipient(DocumentFromTemplateResponseFieldsInnerInnerRecipient recipient) {
    
    
    
    
    this.recipient = recipient;
    return this;
  }

   /**
   * Get recipient
   * @return recipient
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DocumentFromTemplateResponseFieldsInnerInnerRecipient getRecipient() {
    return recipient;
  }


  public void setRecipient(DocumentFromTemplateResponseFieldsInnerInnerRecipient recipient) {
    
    
    
    this.recipient = recipient;
  }


  public DocumentFromTemplateResponseFieldsInnerInner apiId(UUID apiId) {
    
    
    
    
    this.apiId = apiId;
    return this;
  }

   /**
   * Get apiId
   * @return apiId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getApiId() {
    return apiId;
  }


  public void setApiId(UUID apiId) {
    
    
    
    this.apiId = apiId;
  }


  public DocumentFromTemplateResponseFieldsInnerInner dateFormat(String dateFormat) {
    
    
    
    
    this.dateFormat = dateFormat;
    return this;
  }

   /**
   * Get dateFormat
   * @return dateFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDateFormat() {
    return dateFormat;
  }


  public void setDateFormat(String dateFormat) {
    
    
    
    this.dateFormat = dateFormat;
  }


  public DocumentFromTemplateResponseFieldsInnerInner fixedWidth(Boolean fixedWidth) {
    
    
    
    
    this.fixedWidth = fixedWidth;
    return this;
  }

   /**
   * Get fixedWidth
   * @return fixedWidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFixedWidth() {
    return fixedWidth;
  }


  public void setFixedWidth(Boolean fixedWidth) {
    
    
    
    this.fixedWidth = fixedWidth;
  }


  public DocumentFromTemplateResponseFieldsInnerInner label(String label) {
    
    
    
    
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    
    
    
    this.label = label;
  }


  public DocumentFromTemplateResponseFieldsInnerInner lockSignDate(Boolean lockSignDate) {
    
    
    
    
    this.lockSignDate = lockSignDate;
    return this;
  }

   /**
   * Get lockSignDate
   * @return lockSignDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getLockSignDate() {
    return lockSignDate;
  }


  public void setLockSignDate(Boolean lockSignDate) {
    
    
    
    this.lockSignDate = lockSignDate;
  }


  public DocumentFromTemplateResponseFieldsInnerInner required(Boolean required) {
    
    
    
    
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRequired() {
    return required;
  }


  public void setRequired(Boolean required) {
    
    
    
    this.required = required;
  }


  public DocumentFromTemplateResponseFieldsInnerInner type(String type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    
    
    
    this.type = type;
  }


  public DocumentFromTemplateResponseFieldsInnerInner validation(String validation) {
    
    
    
    
    this.validation = validation;
    return this;
  }

   /**
   * Get validation
   * @return validation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getValidation() {
    return validation;
  }


  public void setValidation(String validation) {
    
    
    
    this.validation = validation;
  }


  public DocumentFromTemplateResponseFieldsInnerInner value(Object value) {
    
    
    
    
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getValue() {
    return value;
  }


  public void setValue(Object value) {
    
    
    
    this.value = value;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the DocumentFromTemplateResponseFieldsInnerInner instance itself
   */
  public DocumentFromTemplateResponseFieldsInnerInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentFromTemplateResponseFieldsInnerInner documentFromTemplateResponseFieldsInnerInner = (DocumentFromTemplateResponseFieldsInnerInner) o;
    return Objects.equals(this.x, documentFromTemplateResponseFieldsInnerInner.x) &&
        Objects.equals(this.y, documentFromTemplateResponseFieldsInnerInner.y) &&
        Objects.equals(this.page, documentFromTemplateResponseFieldsInnerInner.page) &&
        Objects.equals(this.recipient, documentFromTemplateResponseFieldsInnerInner.recipient) &&
        Objects.equals(this.apiId, documentFromTemplateResponseFieldsInnerInner.apiId) &&
        Objects.equals(this.dateFormat, documentFromTemplateResponseFieldsInnerInner.dateFormat) &&
        Objects.equals(this.fixedWidth, documentFromTemplateResponseFieldsInnerInner.fixedWidth) &&
        Objects.equals(this.label, documentFromTemplateResponseFieldsInnerInner.label) &&
        Objects.equals(this.lockSignDate, documentFromTemplateResponseFieldsInnerInner.lockSignDate) &&
        Objects.equals(this.required, documentFromTemplateResponseFieldsInnerInner.required) &&
        Objects.equals(this.type, documentFromTemplateResponseFieldsInnerInner.type) &&
        Objects.equals(this.validation, documentFromTemplateResponseFieldsInnerInner.validation) &&
        Objects.equals(this.value, documentFromTemplateResponseFieldsInnerInner.value)&&
        Objects.equals(this.additionalProperties, documentFromTemplateResponseFieldsInnerInner.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(x, y, page, recipient, apiId, dateFormat, fixedWidth, label, lockSignDate, required, type, validation, value, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentFromTemplateResponseFieldsInnerInner {\n");
    sb.append("    x: ").append(toIndentedString(x)).append("\n");
    sb.append("    y: ").append(toIndentedString(y)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    apiId: ").append(toIndentedString(apiId)).append("\n");
    sb.append("    dateFormat: ").append(toIndentedString(dateFormat)).append("\n");
    sb.append("    fixedWidth: ").append(toIndentedString(fixedWidth)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    lockSignDate: ").append(toIndentedString(lockSignDate)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    validation: ").append(toIndentedString(validation)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("x");
    openapiFields.add("y");
    openapiFields.add("page");
    openapiFields.add("recipient");
    openapiFields.add("api_id");
    openapiFields.add("date_format");
    openapiFields.add("fixed_width");
    openapiFields.add("label");
    openapiFields.add("lock_sign_date");
    openapiFields.add("required");
    openapiFields.add("type");
    openapiFields.add("validation");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("x");
    openapiRequiredFields.add("y");
    openapiRequiredFields.add("page");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DocumentFromTemplateResponseFieldsInnerInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DocumentFromTemplateResponseFieldsInnerInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DocumentFromTemplateResponseFieldsInnerInner is not found in the empty JSON string", DocumentFromTemplateResponseFieldsInnerInner.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DocumentFromTemplateResponseFieldsInnerInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `recipient`
      if (jsonObj.get("recipient") != null && !jsonObj.get("recipient").isJsonNull()) {
        DocumentFromTemplateResponseFieldsInnerInnerRecipient.validateJsonObject(jsonObj.getAsJsonObject("recipient"));
      }
      if ((jsonObj.get("api_id") != null && !jsonObj.get("api_id").isJsonNull()) && !jsonObj.get("api_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_id").toString()));
      }
      if ((jsonObj.get("date_format") != null && !jsonObj.get("date_format").isJsonNull()) && !jsonObj.get("date_format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_format").toString()));
      }
      if ((jsonObj.get("label") != null && !jsonObj.get("label").isJsonNull()) && !jsonObj.get("label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("validation") != null && !jsonObj.get("validation").isJsonNull()) && !jsonObj.get("validation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `validation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("validation").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DocumentFromTemplateResponseFieldsInnerInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DocumentFromTemplateResponseFieldsInnerInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DocumentFromTemplateResponseFieldsInnerInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DocumentFromTemplateResponseFieldsInnerInner.class));

       return (TypeAdapter<T>) new TypeAdapter<DocumentFromTemplateResponseFieldsInnerInner>() {
           @Override
           public void write(JsonWriter out, DocumentFromTemplateResponseFieldsInnerInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public DocumentFromTemplateResponseFieldsInnerInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             DocumentFromTemplateResponseFieldsInnerInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DocumentFromTemplateResponseFieldsInnerInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DocumentFromTemplateResponseFieldsInnerInner
  * @throws IOException if the JSON string is invalid with respect to DocumentFromTemplateResponseFieldsInnerInner
  */
  public static DocumentFromTemplateResponseFieldsInnerInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DocumentFromTemplateResponseFieldsInnerInner.class);
  }

 /**
  * Convert an instance of DocumentFromTemplateResponseFieldsInnerInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

