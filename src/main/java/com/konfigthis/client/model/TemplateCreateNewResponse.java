/*
 * Resources and endpoints
 * When I started SignWell in 2019, I saw there was a need for an alternative to the hard-to-use and expensive e-signature software already out there. Documents can be complicated enough, but getting a document signed shouldn't be complicated too.  At SignWell, we pride ourselves not only on the ease and affordability of our e-signature process but also on our personalized and industry-leading customer support â€” whether it's for individual use or larger team accounts, SignWell is here to help you feel comfortable and confident getting your documents signed.  The SignWell mission? Simplify how documents get signed for millions of people and businesses. We're excited to help you continue to move toward the future of paperless document signing.  Ruben Gamez Founder, SignWell
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.TemplateCreateNewResponseCopiedPlaceholdersInner;
import com.konfigthis.client.model.TemplateCreateNewResponseFieldsInnerInner;
import com.konfigthis.client.model.TemplateCreateNewResponseFilesInner;
import com.konfigthis.client.model.TemplateCreateNewResponseMetadata;
import com.konfigthis.client.model.TemplateCreateNewResponsePlaceholdersInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TemplateCreateNewResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TemplateCreateNewResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ARCHIVED = "archived";
  @SerializedName(SERIALIZED_NAME_ARCHIVED)
  private Boolean archived;

  public static final String SERIALIZED_NAME_EMBEDDED_EDIT_URL = "embedded_edit_url";
  @SerializedName(SERIALIZED_NAME_EMBEDDED_EDIT_URL)
  private String embeddedEditUrl;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REQUESTER_EMAIL_ADDRESS = "requester_email_address";
  @SerializedName(SERIALIZED_NAME_REQUESTER_EMAIL_ADDRESS)
  private String requesterEmailAddress;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_TEMPLATE_LINK = "template_link";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_LINK)
  private String templateLink;

  public static final String SERIALIZED_NAME_ALLOW_DECLINE = "allow_decline";
  @SerializedName(SERIALIZED_NAME_ALLOW_DECLINE)
  private Boolean allowDecline;

  public static final String SERIALIZED_NAME_ALLOW_REASSIGN = "allow_reassign";
  @SerializedName(SERIALIZED_NAME_ALLOW_REASSIGN)
  private String allowReassign;

  public static final String SERIALIZED_NAME_API_APPLICATION_ID = "api_application_id";
  @SerializedName(SERIALIZED_NAME_API_APPLICATION_ID)
  private String apiApplicationId;

  public static final String SERIALIZED_NAME_DECLINE_REDIRECT_URL = "decline_redirect_url";
  @SerializedName(SERIALIZED_NAME_DECLINE_REDIRECT_URL)
  private String declineRedirectUrl;

  public static final String SERIALIZED_NAME_EXPIRES_IN = "expires_in";
  @SerializedName(SERIALIZED_NAME_EXPIRES_IN)
  private Double expiresIn;

  public static final String SERIALIZED_NAME_REDIRECT_URL = "redirect_url";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URL)
  private String redirectUrl;

  public static final String SERIALIZED_NAME_REMINDERS = "reminders";
  @SerializedName(SERIALIZED_NAME_REMINDERS)
  private Boolean reminders;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private TemplateCreateNewResponseMetadata metadata;

  public static final String SERIALIZED_NAME_APPLY_SIGNING_ORDER = "apply_signing_order";
  @SerializedName(SERIALIZED_NAME_APPLY_SIGNING_ORDER)
  private Boolean applySigningOrder;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private List<List<TemplateCreateNewResponseFieldsInnerInner>> fields = null;

  public static final String SERIALIZED_NAME_FILES = "files";
  @SerializedName(SERIALIZED_NAME_FILES)
  private List<TemplateCreateNewResponseFilesInner> files = null;

  public static final String SERIALIZED_NAME_COPIED_PLACEHOLDERS = "copied_placeholders";
  @SerializedName(SERIALIZED_NAME_COPIED_PLACEHOLDERS)
  private List<TemplateCreateNewResponseCopiedPlaceholdersInner> copiedPlaceholders = null;

  public static final String SERIALIZED_NAME_PLACEHOLDERS = "placeholders";
  @SerializedName(SERIALIZED_NAME_PLACEHOLDERS)
  private List<TemplateCreateNewResponsePlaceholdersInner> placeholders = null;

  public TemplateCreateNewResponse() {
  }

  public TemplateCreateNewResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "55776633-e277-4402-88fc-1115994b43b8", value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public TemplateCreateNewResponse archived(Boolean archived) {
    
    
    
    
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getArchived() {
    return archived;
  }


  public void setArchived(Boolean archived) {
    
    
    
    this.archived = archived;
  }


  public TemplateCreateNewResponse embeddedEditUrl(String embeddedEditUrl) {
    
    
    
    
    this.embeddedEditUrl = embeddedEditUrl;
    return this;
  }

   /**
   * Get embeddedEditUrl
   * @return embeddedEditUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.signwell.com/edit/template/8c30fbd9-8736-495e-992c-0d855f55a196/", value = "")

  public String getEmbeddedEditUrl() {
    return embeddedEditUrl;
  }


  public void setEmbeddedEditUrl(String embeddedEditUrl) {
    
    
    
    this.embeddedEditUrl = embeddedEditUrl;
  }


  public TemplateCreateNewResponse name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Agreement", value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public TemplateCreateNewResponse requesterEmailAddress(String requesterEmailAddress) {
    
    
    
    
    this.requesterEmailAddress = requesterEmailAddress;
    return this;
  }

   /**
   * Get requesterEmailAddress
   * @return requesterEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "shrimply_pibbles_26@example.net", value = "")

  public String getRequesterEmailAddress() {
    return requesterEmailAddress;
  }


  public void setRequesterEmailAddress(String requesterEmailAddress) {
    
    
    
    this.requesterEmailAddress = requesterEmailAddress;
  }


  public TemplateCreateNewResponse status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Created", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public TemplateCreateNewResponse createdAt(String createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2024-02-12T13:16:19Z", value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public TemplateCreateNewResponse updatedAt(String updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2024-02-12T13:16:19Z", value = "")

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }


  public TemplateCreateNewResponse templateLink(String templateLink) {
    
    
    
    
    this.templateLink = templateLink;
    return this;
  }

   /**
   * Get templateLink
   * @return templateLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.signwell.com/new_doc/AUi3Zx74YXCjF7Yy/", value = "")

  public String getTemplateLink() {
    return templateLink;
  }


  public void setTemplateLink(String templateLink) {
    
    
    
    this.templateLink = templateLink;
  }


  public TemplateCreateNewResponse allowDecline(Boolean allowDecline) {
    
    
    
    
    this.allowDecline = allowDecline;
    return this;
  }

   /**
   * Get allowDecline
   * @return allowDecline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getAllowDecline() {
    return allowDecline;
  }


  public void setAllowDecline(Boolean allowDecline) {
    
    
    
    this.allowDecline = allowDecline;
  }


  public TemplateCreateNewResponse allowReassign(String allowReassign) {
    
    
    
    
    this.allowReassign = allowReassign;
    return this;
  }

   /**
   * Get allowReassign
   * @return allowReassign
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAllowReassign() {
    return allowReassign;
  }


  public void setAllowReassign(String allowReassign) {
    
    
    
    this.allowReassign = allowReassign;
  }


  public TemplateCreateNewResponse apiApplicationId(String apiApplicationId) {
    
    
    
    
    this.apiApplicationId = apiApplicationId;
    return this;
  }

   /**
   * Get apiApplicationId
   * @return apiApplicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApiApplicationId() {
    return apiApplicationId;
  }


  public void setApiApplicationId(String apiApplicationId) {
    
    
    
    this.apiApplicationId = apiApplicationId;
  }


  public TemplateCreateNewResponse declineRedirectUrl(String declineRedirectUrl) {
    
    
    
    
    this.declineRedirectUrl = declineRedirectUrl;
    return this;
  }

   /**
   * Get declineRedirectUrl
   * @return declineRedirectUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.domain.com/decline_path/", value = "")

  public String getDeclineRedirectUrl() {
    return declineRedirectUrl;
  }


  public void setDeclineRedirectUrl(String declineRedirectUrl) {
    
    
    
    this.declineRedirectUrl = declineRedirectUrl;
  }


  public TemplateCreateNewResponse expiresIn(Double expiresIn) {
    
    
    
    
    this.expiresIn = expiresIn;
    return this;
  }

  public TemplateCreateNewResponse expiresIn(Integer expiresIn) {
    
    
    
    
    this.expiresIn = expiresIn.doubleValue();
    return this;
  }

   /**
   * Get expiresIn
   * @return expiresIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "365", value = "")

  public Double getExpiresIn() {
    return expiresIn;
  }


  public void setExpiresIn(Double expiresIn) {
    
    
    
    this.expiresIn = expiresIn;
  }


  public TemplateCreateNewResponse redirectUrl(String redirectUrl) {
    
    
    
    
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * Get redirectUrl
   * @return redirectUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.domain.com/redirect_path/", value = "")

  public String getRedirectUrl() {
    return redirectUrl;
  }


  public void setRedirectUrl(String redirectUrl) {
    
    
    
    this.redirectUrl = redirectUrl;
  }


  public TemplateCreateNewResponse reminders(Boolean reminders) {
    
    
    
    
    this.reminders = reminders;
    return this;
  }

   /**
   * Get reminders
   * @return reminders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getReminders() {
    return reminders;
  }


  public void setReminders(Boolean reminders) {
    
    
    
    this.reminders = reminders;
  }


  public TemplateCreateNewResponse metadata(TemplateCreateNewResponseMetadata metadata) {
    
    
    
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TemplateCreateNewResponseMetadata getMetadata() {
    return metadata;
  }


  public void setMetadata(TemplateCreateNewResponseMetadata metadata) {
    
    
    
    this.metadata = metadata;
  }


  public TemplateCreateNewResponse applySigningOrder(Boolean applySigningOrder) {
    
    
    
    
    this.applySigningOrder = applySigningOrder;
    return this;
  }

   /**
   * Get applySigningOrder
   * @return applySigningOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getApplySigningOrder() {
    return applySigningOrder;
  }


  public void setApplySigningOrder(Boolean applySigningOrder) {
    
    
    
    this.applySigningOrder = applySigningOrder;
  }


  public TemplateCreateNewResponse message(String message) {
    
    
    
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Normal Body", value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    
    
    
    this.message = message;
  }


  public TemplateCreateNewResponse subject(String subject) {
    
    
    
    
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Normal subject", value = "")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    
    
    
    this.subject = subject;
  }


  public TemplateCreateNewResponse fields(List<List<TemplateCreateNewResponseFieldsInnerInner>> fields) {
    
    
    
    
    this.fields = fields;
    return this;
  }

  public TemplateCreateNewResponse addFieldsItem(List<TemplateCreateNewResponseFieldsInnerInner> fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<List<TemplateCreateNewResponseFieldsInnerInner>> getFields() {
    return fields;
  }


  public void setFields(List<List<TemplateCreateNewResponseFieldsInnerInner>> fields) {
    
    
    
    this.fields = fields;
  }


  public TemplateCreateNewResponse files(List<TemplateCreateNewResponseFilesInner> files) {
    
    
    
    
    this.files = files;
    return this;
  }

  public TemplateCreateNewResponse addFilesItem(TemplateCreateNewResponseFilesInner filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * Get files
   * @return files
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TemplateCreateNewResponseFilesInner> getFiles() {
    return files;
  }


  public void setFiles(List<TemplateCreateNewResponseFilesInner> files) {
    
    
    
    this.files = files;
  }


  public TemplateCreateNewResponse copiedPlaceholders(List<TemplateCreateNewResponseCopiedPlaceholdersInner> copiedPlaceholders) {
    
    
    
    
    this.copiedPlaceholders = copiedPlaceholders;
    return this;
  }

  public TemplateCreateNewResponse addCopiedPlaceholdersItem(TemplateCreateNewResponseCopiedPlaceholdersInner copiedPlaceholdersItem) {
    if (this.copiedPlaceholders == null) {
      this.copiedPlaceholders = new ArrayList<>();
    }
    this.copiedPlaceholders.add(copiedPlaceholdersItem);
    return this;
  }

   /**
   * Get copiedPlaceholders
   * @return copiedPlaceholders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TemplateCreateNewResponseCopiedPlaceholdersInner> getCopiedPlaceholders() {
    return copiedPlaceholders;
  }


  public void setCopiedPlaceholders(List<TemplateCreateNewResponseCopiedPlaceholdersInner> copiedPlaceholders) {
    
    
    
    this.copiedPlaceholders = copiedPlaceholders;
  }


  public TemplateCreateNewResponse placeholders(List<TemplateCreateNewResponsePlaceholdersInner> placeholders) {
    
    
    
    
    this.placeholders = placeholders;
    return this;
  }

  public TemplateCreateNewResponse addPlaceholdersItem(TemplateCreateNewResponsePlaceholdersInner placeholdersItem) {
    if (this.placeholders == null) {
      this.placeholders = new ArrayList<>();
    }
    this.placeholders.add(placeholdersItem);
    return this;
  }

   /**
   * Get placeholders
   * @return placeholders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TemplateCreateNewResponsePlaceholdersInner> getPlaceholders() {
    return placeholders;
  }


  public void setPlaceholders(List<TemplateCreateNewResponsePlaceholdersInner> placeholders) {
    
    
    
    this.placeholders = placeholders;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TemplateCreateNewResponse instance itself
   */
  public TemplateCreateNewResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateCreateNewResponse templateCreateNewResponse = (TemplateCreateNewResponse) o;
    return Objects.equals(this.id, templateCreateNewResponse.id) &&
        Objects.equals(this.archived, templateCreateNewResponse.archived) &&
        Objects.equals(this.embeddedEditUrl, templateCreateNewResponse.embeddedEditUrl) &&
        Objects.equals(this.name, templateCreateNewResponse.name) &&
        Objects.equals(this.requesterEmailAddress, templateCreateNewResponse.requesterEmailAddress) &&
        Objects.equals(this.status, templateCreateNewResponse.status) &&
        Objects.equals(this.createdAt, templateCreateNewResponse.createdAt) &&
        Objects.equals(this.updatedAt, templateCreateNewResponse.updatedAt) &&
        Objects.equals(this.templateLink, templateCreateNewResponse.templateLink) &&
        Objects.equals(this.allowDecline, templateCreateNewResponse.allowDecline) &&
        Objects.equals(this.allowReassign, templateCreateNewResponse.allowReassign) &&
        Objects.equals(this.apiApplicationId, templateCreateNewResponse.apiApplicationId) &&
        Objects.equals(this.declineRedirectUrl, templateCreateNewResponse.declineRedirectUrl) &&
        Objects.equals(this.expiresIn, templateCreateNewResponse.expiresIn) &&
        Objects.equals(this.redirectUrl, templateCreateNewResponse.redirectUrl) &&
        Objects.equals(this.reminders, templateCreateNewResponse.reminders) &&
        Objects.equals(this.metadata, templateCreateNewResponse.metadata) &&
        Objects.equals(this.applySigningOrder, templateCreateNewResponse.applySigningOrder) &&
        Objects.equals(this.message, templateCreateNewResponse.message) &&
        Objects.equals(this.subject, templateCreateNewResponse.subject) &&
        Objects.equals(this.fields, templateCreateNewResponse.fields) &&
        Objects.equals(this.files, templateCreateNewResponse.files) &&
        Objects.equals(this.copiedPlaceholders, templateCreateNewResponse.copiedPlaceholders) &&
        Objects.equals(this.placeholders, templateCreateNewResponse.placeholders)&&
        Objects.equals(this.additionalProperties, templateCreateNewResponse.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, archived, embeddedEditUrl, name, requesterEmailAddress, status, createdAt, updatedAt, templateLink, allowDecline, allowReassign, apiApplicationId, declineRedirectUrl, expiresIn, redirectUrl, reminders, metadata, applySigningOrder, message, subject, fields, files, copiedPlaceholders, placeholders, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateCreateNewResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    embeddedEditUrl: ").append(toIndentedString(embeddedEditUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    requesterEmailAddress: ").append(toIndentedString(requesterEmailAddress)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    templateLink: ").append(toIndentedString(templateLink)).append("\n");
    sb.append("    allowDecline: ").append(toIndentedString(allowDecline)).append("\n");
    sb.append("    allowReassign: ").append(toIndentedString(allowReassign)).append("\n");
    sb.append("    apiApplicationId: ").append(toIndentedString(apiApplicationId)).append("\n");
    sb.append("    declineRedirectUrl: ").append(toIndentedString(declineRedirectUrl)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    reminders: ").append(toIndentedString(reminders)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    applySigningOrder: ").append(toIndentedString(applySigningOrder)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    copiedPlaceholders: ").append(toIndentedString(copiedPlaceholders)).append("\n");
    sb.append("    placeholders: ").append(toIndentedString(placeholders)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("archived");
    openapiFields.add("embedded_edit_url");
    openapiFields.add("name");
    openapiFields.add("requester_email_address");
    openapiFields.add("status");
    openapiFields.add("created_at");
    openapiFields.add("updated_at");
    openapiFields.add("template_link");
    openapiFields.add("allow_decline");
    openapiFields.add("allow_reassign");
    openapiFields.add("api_application_id");
    openapiFields.add("decline_redirect_url");
    openapiFields.add("expires_in");
    openapiFields.add("redirect_url");
    openapiFields.add("reminders");
    openapiFields.add("metadata");
    openapiFields.add("apply_signing_order");
    openapiFields.add("message");
    openapiFields.add("subject");
    openapiFields.add("fields");
    openapiFields.add("files");
    openapiFields.add("copied_placeholders");
    openapiFields.add("placeholders");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TemplateCreateNewResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TemplateCreateNewResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TemplateCreateNewResponse is not found in the empty JSON string", TemplateCreateNewResponse.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("embedded_edit_url") != null && !jsonObj.get("embedded_edit_url").isJsonNull()) && !jsonObj.get("embedded_edit_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `embedded_edit_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("embedded_edit_url").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("requester_email_address") != null && !jsonObj.get("requester_email_address").isJsonNull()) && !jsonObj.get("requester_email_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requester_email_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requester_email_address").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
      if ((jsonObj.get("template_link") != null && !jsonObj.get("template_link").isJsonNull()) && !jsonObj.get("template_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template_link").toString()));
      }
      if (!jsonObj.get("allow_reassign").isJsonNull() && (jsonObj.get("allow_reassign") != null && !jsonObj.get("allow_reassign").isJsonNull()) && !jsonObj.get("allow_reassign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `allow_reassign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("allow_reassign").toString()));
      }
      if (!jsonObj.get("api_application_id").isJsonNull() && (jsonObj.get("api_application_id") != null && !jsonObj.get("api_application_id").isJsonNull()) && !jsonObj.get("api_application_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_application_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_application_id").toString()));
      }
      if ((jsonObj.get("decline_redirect_url") != null && !jsonObj.get("decline_redirect_url").isJsonNull()) && !jsonObj.get("decline_redirect_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `decline_redirect_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("decline_redirect_url").toString()));
      }
      if ((jsonObj.get("redirect_url") != null && !jsonObj.get("redirect_url").isJsonNull()) && !jsonObj.get("redirect_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redirect_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redirect_url").toString()));
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        TemplateCreateNewResponseMetadata.validateJsonObject(jsonObj.getAsJsonObject("metadata"));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("fields") != null && !jsonObj.get("fields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `fields` to be an array in the JSON string but got `%s`", jsonObj.get("fields").toString()));
      }
      if (jsonObj.get("files") != null && !jsonObj.get("files").isJsonNull()) {
        JsonArray jsonArrayfiles = jsonObj.getAsJsonArray("files");
        if (jsonArrayfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("files").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `files` to be an array in the JSON string but got `%s`", jsonObj.get("files").toString()));
          }

          // validate the optional field `files` (array)
          for (int i = 0; i < jsonArrayfiles.size(); i++) {
            TemplateCreateNewResponseFilesInner.validateJsonObject(jsonArrayfiles.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("copied_placeholders") != null && !jsonObj.get("copied_placeholders").isJsonNull()) {
        JsonArray jsonArraycopiedPlaceholders = jsonObj.getAsJsonArray("copied_placeholders");
        if (jsonArraycopiedPlaceholders != null) {
          // ensure the json data is an array
          if (!jsonObj.get("copied_placeholders").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `copied_placeholders` to be an array in the JSON string but got `%s`", jsonObj.get("copied_placeholders").toString()));
          }

          // validate the optional field `copied_placeholders` (array)
          for (int i = 0; i < jsonArraycopiedPlaceholders.size(); i++) {
            TemplateCreateNewResponseCopiedPlaceholdersInner.validateJsonObject(jsonArraycopiedPlaceholders.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("placeholders") != null && !jsonObj.get("placeholders").isJsonNull()) {
        JsonArray jsonArrayplaceholders = jsonObj.getAsJsonArray("placeholders");
        if (jsonArrayplaceholders != null) {
          // ensure the json data is an array
          if (!jsonObj.get("placeholders").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `placeholders` to be an array in the JSON string but got `%s`", jsonObj.get("placeholders").toString()));
          }

          // validate the optional field `placeholders` (array)
          for (int i = 0; i < jsonArrayplaceholders.size(); i++) {
            TemplateCreateNewResponsePlaceholdersInner.validateJsonObject(jsonArrayplaceholders.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TemplateCreateNewResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TemplateCreateNewResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TemplateCreateNewResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TemplateCreateNewResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<TemplateCreateNewResponse>() {
           @Override
           public void write(JsonWriter out, TemplateCreateNewResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TemplateCreateNewResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TemplateCreateNewResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TemplateCreateNewResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TemplateCreateNewResponse
  * @throws IOException if the JSON string is invalid with respect to TemplateCreateNewResponse
  */
  public static TemplateCreateNewResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TemplateCreateNewResponse.class);
  }

 /**
  * Convert an instance of TemplateCreateNewResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

