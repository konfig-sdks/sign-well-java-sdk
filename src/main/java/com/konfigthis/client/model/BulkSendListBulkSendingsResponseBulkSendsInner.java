/*
 * Resources and endpoints
 * When I started SignWell in 2019, I saw there was a need for an alternative to the hard-to-use and expensive e-signature software already out there. Documents can be complicated enough, but getting a document signed shouldn't be complicated too.  At SignWell, we pride ourselves not only on the ease and affordability of our e-signature process but also on our personalized and industry-leading customer support â€” whether it's for individual use or larger team accounts, SignWell is here to help you feel comfortable and confident getting your documents signed.  The SignWell mission? Simplify how documents get signed for millions of people and businesses. We're excited to help you continue to move toward the future of paperless document signing.  Ruben Gamez Founder, SignWell
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * BulkSendListBulkSendingsResponseBulkSendsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class BulkSendListBulkSendingsResponseBulkSendsInner {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_API_APPLICATION_ID = "api_application_id";
  @SerializedName(SERIALIZED_NAME_API_APPLICATION_ID)
  private String apiApplicationId;

  public static final String SERIALIZED_NAME_DOCUMENTS_COUNT = "documents_count";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_COUNT)
  private Double documentsCount;

  public static final String SERIALIZED_NAME_DOCUMENTS_COMPLETED = "documents_completed";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_COMPLETED)
  private Double documentsCompleted;

  public static final String SERIALIZED_NAME_DOCUMENTS_NOT_COMPLETED = "documents_not_completed";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_NOT_COMPLETED)
  private Double documentsNotCompleted;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TEMPLATE_IDS = "template_ids";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_IDS)
  private List<String> templateIds = null;

  public BulkSendListBulkSendingsResponseBulkSendsInner() {
  }

  public BulkSendListBulkSendingsResponseBulkSendsInner id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "cbc13177-bc09-4ada-9069-c51bbedef4f8", value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public BulkSendListBulkSendingsResponseBulkSendsInner name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Cirith Ungol", value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public BulkSendListBulkSendingsResponseBulkSendsInner apiApplicationId(String apiApplicationId) {
    
    
    
    
    this.apiApplicationId = apiApplicationId;
    return this;
  }

   /**
   * Get apiApplicationId
   * @return apiApplicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApiApplicationId() {
    return apiApplicationId;
  }


  public void setApiApplicationId(String apiApplicationId) {
    
    
    
    this.apiApplicationId = apiApplicationId;
  }


  public BulkSendListBulkSendingsResponseBulkSendsInner documentsCount(Double documentsCount) {
    
    
    
    
    this.documentsCount = documentsCount;
    return this;
  }

  public BulkSendListBulkSendingsResponseBulkSendsInner documentsCount(Integer documentsCount) {
    
    
    
    
    this.documentsCount = documentsCount.doubleValue();
    return this;
  }

   /**
   * Get documentsCount
   * @return documentsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getDocumentsCount() {
    return documentsCount;
  }


  public void setDocumentsCount(Double documentsCount) {
    
    
    
    this.documentsCount = documentsCount;
  }


  public BulkSendListBulkSendingsResponseBulkSendsInner documentsCompleted(Double documentsCompleted) {
    
    
    
    
    this.documentsCompleted = documentsCompleted;
    return this;
  }

  public BulkSendListBulkSendingsResponseBulkSendsInner documentsCompleted(Integer documentsCompleted) {
    
    
    
    
    this.documentsCompleted = documentsCompleted.doubleValue();
    return this;
  }

   /**
   * Get documentsCompleted
   * @return documentsCompleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getDocumentsCompleted() {
    return documentsCompleted;
  }


  public void setDocumentsCompleted(Double documentsCompleted) {
    
    
    
    this.documentsCompleted = documentsCompleted;
  }


  public BulkSendListBulkSendingsResponseBulkSendsInner documentsNotCompleted(Double documentsNotCompleted) {
    
    
    
    
    this.documentsNotCompleted = documentsNotCompleted;
    return this;
  }

  public BulkSendListBulkSendingsResponseBulkSendsInner documentsNotCompleted(Integer documentsNotCompleted) {
    
    
    
    
    this.documentsNotCompleted = documentsNotCompleted.doubleValue();
    return this;
  }

   /**
   * Get documentsNotCompleted
   * @return documentsNotCompleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getDocumentsNotCompleted() {
    return documentsNotCompleted;
  }


  public void setDocumentsNotCompleted(Double documentsNotCompleted) {
    
    
    
    this.documentsNotCompleted = documentsNotCompleted;
  }


  public BulkSendListBulkSendingsResponseBulkSendsInner createdAt(String createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2024-02-12T13:16:25Z", value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public BulkSendListBulkSendingsResponseBulkSendsInner userId(String userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    
    
    
    this.userId = userId;
  }


  public BulkSendListBulkSendingsResponseBulkSendsInner status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Created", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public BulkSendListBulkSendingsResponseBulkSendsInner templateIds(List<String> templateIds) {
    
    
    
    
    this.templateIds = templateIds;
    return this;
  }

  public BulkSendListBulkSendingsResponseBulkSendsInner addTemplateIdsItem(String templateIdsItem) {
    if (this.templateIds == null) {
      this.templateIds = new ArrayList<>();
    }
    this.templateIds.add(templateIdsItem);
    return this;
  }

   /**
   * Get templateIds
   * @return templateIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTemplateIds() {
    return templateIds;
  }


  public void setTemplateIds(List<String> templateIds) {
    
    
    
    this.templateIds = templateIds;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the BulkSendListBulkSendingsResponseBulkSendsInner instance itself
   */
  public BulkSendListBulkSendingsResponseBulkSendsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkSendListBulkSendingsResponseBulkSendsInner bulkSendListBulkSendingsResponseBulkSendsInner = (BulkSendListBulkSendingsResponseBulkSendsInner) o;
    return Objects.equals(this.id, bulkSendListBulkSendingsResponseBulkSendsInner.id) &&
        Objects.equals(this.name, bulkSendListBulkSendingsResponseBulkSendsInner.name) &&
        Objects.equals(this.apiApplicationId, bulkSendListBulkSendingsResponseBulkSendsInner.apiApplicationId) &&
        Objects.equals(this.documentsCount, bulkSendListBulkSendingsResponseBulkSendsInner.documentsCount) &&
        Objects.equals(this.documentsCompleted, bulkSendListBulkSendingsResponseBulkSendsInner.documentsCompleted) &&
        Objects.equals(this.documentsNotCompleted, bulkSendListBulkSendingsResponseBulkSendsInner.documentsNotCompleted) &&
        Objects.equals(this.createdAt, bulkSendListBulkSendingsResponseBulkSendsInner.createdAt) &&
        Objects.equals(this.userId, bulkSendListBulkSendingsResponseBulkSendsInner.userId) &&
        Objects.equals(this.status, bulkSendListBulkSendingsResponseBulkSendsInner.status) &&
        Objects.equals(this.templateIds, bulkSendListBulkSendingsResponseBulkSendsInner.templateIds)&&
        Objects.equals(this.additionalProperties, bulkSendListBulkSendingsResponseBulkSendsInner.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, apiApplicationId, documentsCount, documentsCompleted, documentsNotCompleted, createdAt, userId, status, templateIds, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkSendListBulkSendingsResponseBulkSendsInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    apiApplicationId: ").append(toIndentedString(apiApplicationId)).append("\n");
    sb.append("    documentsCount: ").append(toIndentedString(documentsCount)).append("\n");
    sb.append("    documentsCompleted: ").append(toIndentedString(documentsCompleted)).append("\n");
    sb.append("    documentsNotCompleted: ").append(toIndentedString(documentsNotCompleted)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    templateIds: ").append(toIndentedString(templateIds)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("api_application_id");
    openapiFields.add("documents_count");
    openapiFields.add("documents_completed");
    openapiFields.add("documents_not_completed");
    openapiFields.add("created_at");
    openapiFields.add("user_id");
    openapiFields.add("status");
    openapiFields.add("template_ids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to BulkSendListBulkSendingsResponseBulkSendsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!BulkSendListBulkSendingsResponseBulkSendsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BulkSendListBulkSendingsResponseBulkSendsInner is not found in the empty JSON string", BulkSendListBulkSendingsResponseBulkSendsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("api_application_id").isJsonNull() && (jsonObj.get("api_application_id") != null && !jsonObj.get("api_application_id").isJsonNull()) && !jsonObj.get("api_application_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_application_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_application_id").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if (!jsonObj.get("user_id").isJsonNull() && (jsonObj.get("user_id") != null && !jsonObj.get("user_id").isJsonNull()) && !jsonObj.get("user_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_id").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("template_ids") != null && !jsonObj.get("template_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `template_ids` to be an array in the JSON string but got `%s`", jsonObj.get("template_ids").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BulkSendListBulkSendingsResponseBulkSendsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BulkSendListBulkSendingsResponseBulkSendsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BulkSendListBulkSendingsResponseBulkSendsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BulkSendListBulkSendingsResponseBulkSendsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<BulkSendListBulkSendingsResponseBulkSendsInner>() {
           @Override
           public void write(JsonWriter out, BulkSendListBulkSendingsResponseBulkSendsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public BulkSendListBulkSendingsResponseBulkSendsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             BulkSendListBulkSendingsResponseBulkSendsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BulkSendListBulkSendingsResponseBulkSendsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BulkSendListBulkSendingsResponseBulkSendsInner
  * @throws IOException if the JSON string is invalid with respect to BulkSendListBulkSendingsResponseBulkSendsInner
  */
  public static BulkSendListBulkSendingsResponseBulkSendsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BulkSendListBulkSendingsResponseBulkSendsInner.class);
  }

 /**
  * Convert an instance of BulkSendListBulkSendingsResponseBulkSendsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

